name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang libbpf-dev linux-headers-$(uname -r)
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-
          
    - name: Download Go modules
      run: go mod download
      
    - name: Verify Go modules
      run: go mod verify
      
    - name: Run go vet
      run: go vet ./...
      
    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...
      
    - name: Run tests with race detection
      run: go test -race -v ./...
      
    - name: Check test coverage
      run: go tool cover -func=coverage.out
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang libbpf-dev linux-headers-$(uname -r)
        
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m

  build:
    name: Build Binary
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang libbpf-dev linux-headers-$(uname -r)
        
    - name: Build eBPF programs
      run: make generate
      
    - name: Build binary
      run: make build
      
    - name: Build development binary
      run: make build-dev
      
    - name: Test binary can start
      run: timeout 5s sudo ./bin/ebpf-server -addr :0 || [[ $? == 124 ]]

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        
    - name: Install Gosec
      run: go install github.com/securecodewarrior/gosec/v2@latest
        
    - name: Run Gosec Security Scanner
      run: gosec -fmt sarif -out gosec.sarif ./...
      
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: gosec.sarif
